create on github

git clone githublink/webpack-demo


cp -a initfiles/. webpack-demo/
cd webpack-demo


npm init -y
eslint --init 
npm install webpack webpack-cli --save-dev
npm install --save-dev style-loader css-loader
npm install -D babel-loader @babel/core @babel/preset-env core-js regenerator-runtime webpack
npm install --save-dev jest
npm install --save-dev babel-jest @babel/core @babel/preset-env
npm install --save-dev eslint-config-prettier

npm install --save-dev webpack webpack-cli style-loader css-loader babel-loader @babel/core @babel/preset-env core-js regenerator-runtime webpack jest babel-jest ts-jest eslint-config-prettier

//if eslint is installed globally, which it is in this computer. otherwise

//jest --init not necesary since config file copied from initial temp[late]


add the folowing to the extends object in .eslintrc.*
{
  "extends": [
    "some-other-config-you-use",
    "prettier"
  ]
}


in package.json delete 
  "main": "index.js",
and add
  "private": true,
This is so we don't accidentally publish it.






*we install lodash, this is optional, but delete import line in index.js
npm install --save lodash


inside package.json we can include npm scripts inside "scripts"
For example:
"build": "webpack --progress --mode=production",
"watch": "webpack --progress --watch --mode=production",
"watchdev": "webpack --progress --watch --mode=development",
"test": "jest" 
now we can run webpack and create the bundle with 
npm run build

ctrl + shit + p  >Format Document to pretify it






to upload to github pages and so it can load from dist folder
git subtree push --prefix dist origin gh-pages



----- 
react
npx create-react-app myReact

cd myReact 
npm start

